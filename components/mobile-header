'use client'

import { useState } from 'react'
import Link from "next/link"
import { Button } from "@/components/ui/button"
import { Truck } from 'lucide-react'

interface MobileHeaderProps {
  currentPage: string
}

export default function MobileHeader({ currentPage }: MobileHeaderProps) {
  const [isMenuOpen, setIsMenuOpen] = useState(false)

  const navItems = [
    { href: '/', label: 'HOME' },
    { href: '/services', label: 'SERVICES' },
    { href: '/why-choose-us', label: 'WHY US' },
    { href: '/how-it-works', label: 'HOW IT WORKS' },
    { href: '/blog', label: 'NEWS' },
    { href: '/contact', label: 'CONTACT' },
  ]

  return (
    <header className="bg-gray-800 border-b-2 border-yellow-400 sticky top-0 z-50">
      <div className="container mx-auto px-4 py-3">
        <div className="flex items-center justify-between">
          <div className="flex items-center space-x-3">
            <div className="bg-yellow-400 p-2 rounded-lg">
              <Truck className="h-7 w-7 text-gray-900" />
            </div>
            <div>
              <span className="text-2xl font-black text-white tracking-tight">DISPATCHING</span>
              <span className="text-2xl font-black text-yellow-400">.PRO</span>
            </div>
          </div>
          
          {/* Desktop Navigation */}
          <nav className="hidden md:flex space-x-8">
            {navItems.map((item) => (
              <Link 
                key={item.href}
                href={item.href} 
                className={
                  currentPage === item.href
                    ? "text-white font-semibold border-b-2 border-yellow-400 pb-1"
                    : "text-gray-300 hover:text-yellow-400 font-semibold transition-colors"
                }
              >
                {item.label}
              </Link>
            ))}
          </nav>
          
          {/* Desktop CTA Button */}
          <Button className="hidden md:flex bg-yellow-400 hover:bg-yellow-500 text-gray-900 font-bold px-6">
            <Link href="/contact">GET STARTED</Link>
          </Button>
          
          {/* Mobile Menu Button */}
          <button 
            className="md:hidden text-white p-2"
            onClick={() => setIsMenuOpen(!isMenuOpen)}
          >
            <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              {isMenuOpen ? (
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
              ) : (
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
              )}
            </svg>
          </button>
        </div>
        
        {/* Mobile Navigation Menu */}
        {isMenuOpen && (
          <div className="md:hidden mt-4 pb-4 border-t border-gray-700">
            <nav className="flex flex-col space-y-4 mt-4">
              {navItems.map((item) => (
                <Link 
                  key={item.href}
                  href={item.href}
                  className={
                    currentPage === item.href
                      ? "text-white font-semibold py-2 border-l-4 border-yellow-400 pl-4"
                      : "text-gray-300 hover:text-yellow-400 font-semibold py-2 pl-4 transition-colors"
                  }
                  onClick={() => setIsMenuOpen(false)}
                >
                  {item.label}
                </Link>
              ))}
              <div className="pt-4">
                <Button className="w-full bg-yellow-400 hover:bg-yellow-500 text-gray-900 font-bold py-3">
                  <Link href="/contact" onClick={() => setIsMenuOpen(false)}>GET STARTED</Link>
                </Button>
              </div>
            </nav>
          </div>
        )}
      </div>
    </header>
  )
}
